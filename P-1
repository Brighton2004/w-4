#include <iostream>
using namespace std;

class Complex {
private:
    float real;
    float imag;

public:
    // Default constructor
    Complex() {
        real = 0;
        imag = 0;
    }

    // Parameterized constructor
    Complex(float r, float i) {
        real = r;
        imag = i;
    }

    // Copy constructor
    Complex(const Complex &c) {
        real = c.real;
        imag = c.imag;
    }

    // Destructor
    ~Complex() {
        // Optional: you can uncomment to see destructor calls
        // cout << "Destructor called for " << real << " + " << imag << "i" << endl;
    }

    // Function to input data
    void getdata() {
        cout << "Enter real part: ";
        cin >> real;
        cout << "Enter imaginary part: ";
        cin >> imag;
    }

    // Function to display data
    void showdata() {
        cout << real << " + " << imag << "i" << endl;
    }

    // Function to add two complex numbers
    Complex add_complex(Complex c1, Complex c2) {
        Complex temp;
        temp.real = c1.real + c2.real;
        temp.imag = c1.imag + c2.imag;
        return temp;
    }
};

// Main function
int main() {
    Complex c1, c2, c3;

    cout << "Enter first complex number:\n";
    c1.getdata();

    cout << "\nEnter second complex number:\n";
    c2.getdata();

    // Adding two complex numbers
    c3 = c3.add_complex(c1, c2);

    cout << "\nFirst complex number: ";
    c1.showdata();

    cout << "Second complex number: ";
    c2.showdata();

    cout << "Sum of complex numbers: ";
    c3.showdata();

    return 0;
}
